import asyncio
import logging

from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery

from config import BOT_TOKEN, menu
from handlers.bestseal_handler import best_router
from handlers.history_handler import history_router
from handlers.low_high_handler import lh_router
from handlers.valute_handler import valute_router

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()
dp.include_router(lh_router)
dp.include_router(best_router)
dp.include_router(history_router)
dp.include_router(valute_router)


@dp.message(CommandStart())
async def handler_start(message: types.Message):
    await message.answer(
        text=f"""Hi {message.chat.full_name} üôÇ!
–Ø —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ—Ç–µ–ª–µ–π. –Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –≤–∞–º 
–≥–æ—Å—Ç–∏–Ω–∏—Ü—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–∏—Ö –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π. –ß—Ç–æ–±—ã 
—É–∑–Ω–∞—Ç—å —á—Ç–æ —è —É–º–µ—é –≤–≤–µ–¥–∏—Ç–µ /help"""
    )


@dp.message(F.text == "/help")
async def handle_help(message: types.Message, state: FSMContext):
    await state.clear()
    await message.answer("–ú–µ–Ω—é", reply_markup=menu)


@dp.callback_query(F.data == "can")
async def begin_work(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã can"""
    await callback.message.answer(
        "–ë–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –Ω–∞–π—Ç–∏ –æ—Ç–µ–ª–∏ –ø–æ –≤–∞—à–∏–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º. "
        "–ß—Ç–æ–±—ã –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –æ—Ç–µ–ª–∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç —Å–∞–º—ã—Ö –¥–µ—à–µ–≤—ã—Ö, "
        "–í—ã–±–µ—Ä–∏—Ç–µ –≤ –º–µ–Ω—é –ø–æ–∫–∞–∑–∞—Ç—å —Å–∞–º—ã–µ –¥–µ—à–µ–≤—ã–µ –æ—Ç–µ–ª–∏, –¥–∞–ª–µ–µ –≤–∞–º "
        "–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—É–¥–µ—Ç –≤–≤–µ—Å—Ç–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ, —Ç–∞–∫–∏–µ –∫–∞–∫ –¥–∞—Ç–∞ –∑–∞–µ–∑–¥–∞, –¥–∞—Ç–∞ –≤—ã–µ–∑–¥–∞ –∏–∑ –æ—Ç–µ–ª—è, "
        "–ù—É–∂–Ω—ã –ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∏ –µ—Å–ª–∏ –Ω—É–∂–Ω—ã —Ç–æ —Å–∫–æ–ª—å–∫–æ. –ü–æ –∫–æ–º–∞–Ω–¥–µ –ø–æ–∫–∞–∑–∞—Ç—å —Å–∞–º—ã–µ –ª—É—á—à–∏–µ –æ—Ç–µ–ª–∏, "
        "–≤–∞–º –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω—ã –æ—Ç–µ–ª–∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∑–≤–µ–∑–¥ —É –æ—Ç–µ–ª–µ–π, –¥–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ "
        "–Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –≤–≤–µ—Å—Ç–∏ —Ç–µ –∂–µ —á—Ç–æ –∏ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —Ä–∞–∑–¥–µ–ª–µ. –ù—É –∏ –ø–æ –ø—É–Ω–∫—Ç—É –ø–æ –≤–∞—à–∏–º –¥–∞–Ω–Ω—ã–º "
        "–≤–∞–º –±—É–¥—É—Ç –∑–∞–¥–∞–Ω—ã –µ—â–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, —Ç–∞–∫–∏–µ –∫–∞–∫ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω—ã, "
        "–∏ –∫–∞–∫ –¥–∞–ª–µ–∫–æ –æ—Ç —Ü–µ–Ω—Ç—Ä–∞ –≤—ã –≥–æ—Ç–æ–≤—ã –ø–æ—Å–µ–ª–∏—Ç—å—Å—è. –¢–∞–∫ –∂–µ –≤ –º–µ–Ω—é –¥–æ–±–∞–≤–ª–µ–Ω –ø—É–Ω–∫—Ç, –ø–æ–∫–∞–∑–∞—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç, "
        "–≥–¥–µ –≤–∞–º –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –≤–∞–ª—é—Ç."
    )
    await callback.message.answer("–ú–µ–Ω—é.", reply_markup=menu)


@dp.callback_query(F.data == "info")
async def begin_work(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã can"""
    await callback.message.answer(
        "–û—Ç–≤–µ—Ç–∏–º –Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã. –ü–æ—á–µ–º—É –≤—ã–≤–æ–¥–∏—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –ø–æ 10 –æ—Ç–µ–ª–µ–π? "
        "–û—Ç–≤–µ—Ç: –í–æ –ø–µ—Ä–≤—ã—Ö –∏–∑ –∑–∞ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π —Ä–∞–±–æ—Ç—ã api –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ—Ç–µ–ª–µ–π, "
        "—á—Ç–æ–±—ã —Å–æ–±—Ä–∞—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–µ–±–æ–ª—å—à—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ—Ç–µ–ª—é –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å "
        "–Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ—Ç–µ–ª—è, –∞ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –≤—Ä–µ–º—è, –∏ —á–µ–º –±–æ–ª—å—à–µ –æ—Ç–µ–ª–µ–π"
        " —Ç–µ–º –¥–æ–ª—å—à–µ –∏–¥–µ—Ç —Å–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –≤–æ –≤—Ç–æ—Ä—ã—Ö api –∏–º–µ–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –∑–∞–ø—Ä–æ—Å–∞–º,"
        "–∏ –µ—Å–ª–∏ –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–µ–ª–µ–π, —Ç–æ –∑–∞–ø—Ä–æ—Å—ã —É–ª–µ—Ç—É—á–∏–≤–∞—é—Ç—Å—è –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ."
    )
    await callback.message.answer("–ú–µ–Ω—é.", reply_markup=menu)


async def main():
    logging.basicConfig(level=logging.DEBUG)
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
